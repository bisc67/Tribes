//==============================================================================
//
//  BotLog.cpp
//
//==============================================================================

//==============================================================================
//  INCLUDES
//==============================================================================
#include "BotLog.hpp"
#include "entropy.hpp"

//==============================================================================
//  DEFINES
//==============================================================================

//==============================================================================
//  TYPES
//==============================================================================

//==============================================================================
//  STORAGE
//==============================================================================

//==============================================================================
//  FUNCTIONS
//==============================================================================
void bot_log::Clear( void )
{

#ifdef TARGET_PC

    X_FILE* pBotLog = x_fopen( "BotLog.txt", "w" );
    if ( pBotLog )
    {
        x_fclose( pBotLog );
    }
    else
    {
        ASSERT( 0 ); // couldn't open for writing
    }

#endif
}

void bot_log::Log( const char* pFormatStr, ... )
{
    x_va_list Args;
    x_va_start( Args, pFormatStr );

#ifdef TARGET_PC

    X_FILE* pBotLog = x_fopen( "BotLog.txt", "at" );
    if ( pBotLog )
    {
        x_fprintf( pBotLog, "%s", (const char*)xvfs( pFormatStr, Args ) );
        x_fclose( pBotLog );
    }
    else
    {
        ASSERT( 0 ); // couldn't open for appending
    }

#endif

}

